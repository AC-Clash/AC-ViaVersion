/*
 * This file is part of ViaVersion - https://github.com/ViaVersion/ViaVersion
 * Copyright (C) 2016-2022 ViaVersion and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package com.viaversion.viaversion.api.minecraft.entities;

import com.viaversion.viaversion.util.EntityTypeUtil;

public enum Entity1_19Types implements EntityType {

    ENTITY(-1),

    AREA_EFFECT_CLOUD(0, ENTITY),
    END_CRYSTAL(20, ENTITY),
    EVOKER_FANGS(25, ENTITY),
    EXPERIENCE_ORB(26, ENTITY),
    EYE_OF_ENDER(27, ENTITY),
    FALLING_BLOCK(28, ENTITY),
    FIREWORK_ROCKET(29, ENTITY),
    ITEM(43, ENTITY),
    LLAMA_SPIT(49, ENTITY),
    TNT(71, ENTITY),
    SHULKER_BULLET(78, ENTITY),
    FISHING_BOBBER(116, ENTITY),

    LIVINGENTITY(-1, ENTITY),
    ARMOR_STAND(1, LIVINGENTITY),
    MARKER(51, ENTITY),
    PLAYER(115, LIVINGENTITY),

    ABSTRACT_INSENTIENT(-1, LIVINGENTITY),
    ENDER_DRAGON(21, ABSTRACT_INSENTIENT),

    BEE(5, ABSTRACT_INSENTIENT),

    ABSTRACT_CREATURE(-1, ABSTRACT_INSENTIENT),

    ABSTRACT_AGEABLE(-1, ABSTRACT_CREATURE),
    VILLAGER(101, ABSTRACT_AGEABLE),
    WANDERING_TRADER(103, ABSTRACT_AGEABLE),

    // Animals
    ABSTRACT_ANIMAL(-1, ABSTRACT_AGEABLE),
    AXOLOTL(3, ABSTRACT_ANIMAL),
    DOLPHIN(15, ABSTRACT_INSENTIENT),
    CHICKEN(11, ABSTRACT_ANIMAL),
    COW(13, ABSTRACT_ANIMAL),
    MOOSHROOM(60, COW),
    PANDA(63, ABSTRACT_INSENTIENT),
    PIG(66, ABSTRACT_ANIMAL),
    POLAR_BEAR(70, ABSTRACT_ANIMAL),
    RABBIT(73, ABSTRACT_ANIMAL),
    SHEEP(76, ABSTRACT_ANIMAL),
    TURTLE(99, ABSTRACT_ANIMAL),
    FOX(30, ABSTRACT_ANIMAL),
    FROG(31, ABSTRACT_ANIMAL),
    GOAT(36, ABSTRACT_ANIMAL),

    ABSTRACT_TAMEABLE_ANIMAL(-1, ABSTRACT_ANIMAL),
    CAT(9, ABSTRACT_TAMEABLE_ANIMAL),
    OCELOT(61, ABSTRACT_TAMEABLE_ANIMAL),
    WOLF(109, ABSTRACT_TAMEABLE_ANIMAL),

    ABSTRACT_PARROT(-1, ABSTRACT_TAMEABLE_ANIMAL),
    PARROT(64, ABSTRACT_PARROT),

    // Horses
    ABSTRACT_HORSE(-1, ABSTRACT_ANIMAL),
    CHESTED_HORSE(-1, ABSTRACT_HORSE),
    DONKEY(16, CHESTED_HORSE),
    MULE(59, CHESTED_HORSE),
    LLAMA(48, CHESTED_HORSE),
    TRADER_LLAMA(97, CHESTED_HORSE),
    HORSE(39, ABSTRACT_HORSE),
    SKELETON_HORSE(81, ABSTRACT_HORSE),
    ZOMBIE_HORSE(112, ABSTRACT_HORSE),

    // Golem
    ABSTRACT_GOLEM(-1, ABSTRACT_CREATURE),
    SNOW_GOLEM(84, ABSTRACT_GOLEM),
    IRON_GOLEM(42, ABSTRACT_GOLEM),
    SHULKER(77, ABSTRACT_GOLEM),

    // Fish
    ABSTRACT_FISHES(-1, ABSTRACT_CREATURE),
    COD(12, ABSTRACT_FISHES),
    PUFFERFISH(72, ABSTRACT_FISHES),
    SALMON(75, ABSTRACT_FISHES),
    TROPICAL_FISH(98, ABSTRACT_FISHES),

    // Monsters
    ABSTRACT_MONSTER(-1, ABSTRACT_CREATURE),
    BLAZE(6, ABSTRACT_MONSTER),
    CREEPER(14, ABSTRACT_MONSTER),
    ENDERMITE(23, ABSTRACT_MONSTER),
    ENDERMAN(22, ABSTRACT_MONSTER),
    GIANT(33, ABSTRACT_MONSTER),
    SILVERFISH(79, ABSTRACT_MONSTER),
    VEX(100, ABSTRACT_MONSTER),
    WITCH(105, ABSTRACT_MONSTER),
    WITHER(106, ABSTRACT_MONSTER),
    RAVAGER(74, ABSTRACT_MONSTER),

    ABSTRACT_PIGLIN(-1, ABSTRACT_MONSTER),

    PIGLIN(67, ABSTRACT_PIGLIN),
    PIGLIN_BRUTE(68, ABSTRACT_PIGLIN),

    HOGLIN(38, ABSTRACT_ANIMAL),
    STRIDER(90, ABSTRACT_ANIMAL),
    TADPOLE(90, ABSTRACT_FISHES),
    ZOGLIN(110, ABSTRACT_MONSTER),
    WARDEN(104, ABSTRACT_MONSTER),

    // Illagers
    ABSTRACT_ILLAGER_BASE(-1, ABSTRACT_MONSTER),
    ABSTRACT_EVO_ILLU_ILLAGER(-1, ABSTRACT_ILLAGER_BASE),
    EVOKER(24, ABSTRACT_EVO_ILLU_ILLAGER),
    ILLUSIONER(41, ABSTRACT_EVO_ILLU_ILLAGER),
    VINDICATOR(102, ABSTRACT_ILLAGER_BASE),
    PILLAGER(69, ABSTRACT_ILLAGER_BASE),

    // Skeletons
    ABSTRACT_SKELETON(-1, ABSTRACT_MONSTER),
    SKELETON(80, ABSTRACT_SKELETON),
    STRAY(89, ABSTRACT_SKELETON),
    WITHER_SKELETON(107, ABSTRACT_SKELETON),

    // Guardians
    GUARDIAN(37, ABSTRACT_MONSTER),
    ELDER_GUARDIAN(19, GUARDIAN),

    // Spiders
    SPIDER(87, ABSTRACT_MONSTER),
    CAVE_SPIDER(10, SPIDER),

    // Zombies
    ZOMBIE(111, ABSTRACT_MONSTER),
    DROWNED(18, ZOMBIE),
    HUSK(40, ZOMBIE),
    ZOMBIFIED_PIGLIN(114, ZOMBIE),
    ZOMBIE_VILLAGER(113, ZOMBIE),

    // Flying entities
    ABSTRACT_FLYING(-1, ABSTRACT_INSENTIENT),
    GHAST(32, ABSTRACT_FLYING),
    PHANTOM(65, ABSTRACT_FLYING),

    ABSTRACT_AMBIENT(-1, ABSTRACT_INSENTIENT),
    BAT(4, ABSTRACT_AMBIENT),

    ABSTRACT_WATERMOB(-1, ABSTRACT_INSENTIENT),
    SQUID(88, ABSTRACT_WATERMOB),
    GLOW_SQUID(35, SQUID),

    // Slimes
    SLIME(82, ABSTRACT_INSENTIENT),
    MAGMA_CUBE(50, SLIME),

    // Hangable objects
    ABSTRACT_HANGING(-1, ENTITY),
    LEASH_KNOT(46, ABSTRACT_HANGING),
    ITEM_FRAME(44, ABSTRACT_HANGING),
    GLOW_ITEM_FRAME(34, ITEM_FRAME),
    PAINTING(62, ABSTRACT_HANGING),

    ABSTRACT_LIGHTNING(-1, ENTITY),
    LIGHTNING_BOLT(47, ABSTRACT_LIGHTNING),

    // Arrows
    ABSTRACT_ARROW(-1, ENTITY),
    ARROW(2, ABSTRACT_ARROW),
    SPECTRAL_ARROW(86, ABSTRACT_ARROW),
    TRIDENT(96, ABSTRACT_ARROW),

    // Fireballs
    ABSTRACT_FIREBALL(-1, ENTITY),
    DRAGON_FIREBALL(17, ABSTRACT_FIREBALL),
    FIREBALL(45, ABSTRACT_FIREBALL),
    SMALL_FIREBALL(83, ABSTRACT_FIREBALL),
    WITHER_SKULL(108, ABSTRACT_FIREBALL),

    // Projectiles
    PROJECTILE_ABSTRACT(-1, ENTITY),
    SNOWBALL(85, PROJECTILE_ABSTRACT),
    ENDER_PEARL(93, PROJECTILE_ABSTRACT),
    EGG(92, PROJECTILE_ABSTRACT),
    POTION(95, PROJECTILE_ABSTRACT),
    EXPERIENCE_BOTTLE(94, PROJECTILE_ABSTRACT),

    // Vehicles
    MINECART_ABSTRACT(-1, ENTITY),
    CHESTED_MINECART_ABSTRACT(-1, MINECART_ABSTRACT),
    CHEST_MINECART(53, CHESTED_MINECART_ABSTRACT),
    HOPPER_MINECART(56, CHESTED_MINECART_ABSTRACT),
    MINECART(52, MINECART_ABSTRACT),
    FURNACE_MINECART(55, MINECART_ABSTRACT),
    COMMAND_BLOCK_MINECART(54, MINECART_ABSTRACT),
    TNT_MINECART(58, MINECART_ABSTRACT),
    SPAWNER_MINECART(57, MINECART_ABSTRACT),
    BOAT(7, ENTITY),
    CHEST_BOAT(8, BOAT);

    private static final EntityType[] TYPES;

    private final int id;
    private final EntityType parent;

    Entity1_19Types(int id) {
        this.id = id;
        this.parent = null;
    }

    Entity1_19Types(int id, EntityType parent) {
        this.id = id;
        this.parent = parent;
    }

    @Override
    public int getId() {
        return id;
    }

    @Override
    public EntityType getParent() {
        return parent;
    }

    static {
        TYPES = EntityTypeUtil.toOrderedArray(values());
    }

    public static EntityType getTypeFromId(int typeId) {
        return EntityTypeUtil.getTypeFromId(TYPES, typeId, ENTITY);
    }
}
